// stimulus-use/hotkeys@0.52.2 downloaded from https://ga.jspm.io/npm:stimulus-use@0.52.2/dist/hotkeys.js

import t from"hotkeys-js";function __rest(t,e){var n={};for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&e.indexOf(o)<0&&(n[o]=t[o]);if(t!=null&&typeof Object.getOwnPropertySymbols==="function"){var s=0;for(o=Object.getOwnPropertySymbols(t);s<o.length;s++)e.indexOf(o[s])<0&&Object.prototype.propertyIsEnumerable.call(t,o[s])&&(n[o[s]]=t[o[s]])}return n}const e={debug:false,logger:console,dispatchEvent:true,eventPrefix:true};class StimulusUse{constructor(t,n={}){var o,s,i;this.log=(t,e)=>{if(this.debug){this.logger.groupCollapsed(`%c${this.controller.identifier} %c#${t}`,"color: #3B82F6","color: unset");this.logger.log(Object.assign({controllerId:this.controllerId},e));this.logger.groupEnd()}};this.warn=t=>{this.logger.warn(`%c${this.controller.identifier} %c${t}`,"color: #3B82F6; font-weight: bold","color: unset")};this.dispatch=(t,e={})=>{if(this.dispatchEvent){const{event:n}=e,o=__rest(e,["event"]);const s=this.extendedEvent(t,n||null,o);this.targetElement.dispatchEvent(s);this.log("dispatchEvent",Object.assign({eventName:s.type},o))}};this.call=(t,e={})=>{const n=this.controller[t];if(typeof n=="function")return n.call(this.controller,e)};this.extendedEvent=(t,e,n)=>{const{bubbles:o,cancelable:s,composed:i}=e||{bubbles:true,cancelable:true,composed:true};e&&Object.assign(n,{originalEvent:e});const r=new CustomEvent(this.composeEventName(t),{bubbles:o,cancelable:s,composed:i,detail:n});return r};this.composeEventName=t=>{let e=t;this.eventPrefix===true?e=`${this.controller.identifier}:${t}`:typeof this.eventPrefix==="string"&&(e=`${this.eventPrefix}:${t}`);return e};this.debug=(s=(o=n===null||n===void 0?void 0:n.debug)!==null&&o!==void 0?o:t.application.stimulusUseDebug)!==null&&s!==void 0?s:e.debug;this.logger=(i=n===null||n===void 0?void 0:n.logger)!==null&&i!==void 0?i:e.logger;this.controller=t;this.controllerId=t.element.id||t.element.dataset.id;this.targetElement=(n===null||n===void 0?void 0:n.element)||t.element;const{dispatchEvent:r,eventPrefix:l}=Object.assign({},e,n);Object.assign(this,{dispatchEvent:r,eventPrefix:l});this.controllerInitialize=t.initialize.bind(t);this.controllerConnect=t.connect.bind(t);this.controllerDisconnect=t.disconnect.bind(t)}}class UseHotkeys extends StimulusUse{constructor(e,n){super(e,n);this.bind=()=>{for(const[e,n]of Object.entries(this.hotkeysOptions.hotkeys)){const o=n.handler.bind(this.controller);t(e,n.options,(t=>o(t,t)))}};this.unbind=()=>{for(const e in this.hotkeysOptions.hotkeys)t.unbind(e)};this.controller=e;this.hotkeysOptions=n;this.enhanceController();this.bind()}enhanceController(){this.hotkeysOptions.filter&&(t.filter=this.hotkeysOptions.filter);const e=this.controller.disconnect.bind(this.controller);const disconnect=()=>{this.unbind();e()};Object.assign(this.controller,{disconnect:disconnect})}}const convertSimpleHotkeyDefinition=t=>({handler:t[0],options:{element:t[1]}});const coerceOptions=t=>{if(!t.hotkeys){const e={};Object.entries(t).forEach((([t,n])=>{Object.defineProperty(e,t,{value:convertSimpleHotkeyDefinition(n),writable:false,enumerable:true})}));t={hotkeys:e}}return t};const useHotkeys=(t,e)=>new UseHotkeys(t,coerceOptions(e));export{useHotkeys};

